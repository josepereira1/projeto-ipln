#!/usr/bin/python3

import re
import subprocess
import sys
from getopt import getopt
import fileinput
from collections import Counter

from lxml import etree	#	ferramenta
import csv	#	escrever em excel
import pickle	#	escrever em ficheiros


#	faz o parse e retorna o objeto do tipo Element
def parseXML(filename):
	tree = etree.parse(filename)	#	retorna um ElementTree object e não um Element object

	root = tree.getroot()

	return root

def topN(filename, N, field, objective):
	root = parseXML(filename)

	d = {}

	for elem in root.iter():
		if elem.tag not in objective:
			d[int(elem.get("Id"))] = int(elem.get(field))

	for elem in sorted(d.items(), key=lambda p: p[1], reverse=True):
		print(f"{elem[0]} | {elem[1]}")

	return d

def convertToExcel(dict, outputFile):
	file = outputFile + ".csv"
	print(file)
	w = csv.writer(open(file, "w"))
	
	for key, val in dict.items():
		w.writerow([key,val])

#	converte o dicionário em formato ElementTree e guarda num ficheiro
#	dict: dicionário a escrever
#	agregation: a categoria, p.e. posts, comments, users
# 	single: elemento da agregação, sendo respetivamente post, comment, user
#   criterion: 0 para ordenar pela chave e 1 para ordenar pelo valor
#	reverse: True para ordenar de forma decrescente e False caso contrário 
def writeDictionary(dict, agregation , single, criterion, reverse):
	root = etree.Element(agregation)
	iteration = 0;

	for key, val in sorted(dict.items(), key=lambda p: p[criterion], reverse=reverse): 
		root.append(etree.Element(single))
		root[iteration].set("key", str(key))
		root[iteration].set("value", str(val))
		iteration = iteration + 1

	f = open("output/" + agregation,"w")
	f.write(str(etree.tostring(root, pretty_print = True, encoding='unicode')))
	f.close()

	return root

def main():
    opts, resto = getopt(sys.argv[1:], "albdc")
    dop = dict(opts)
    
    # texto = ""

    # # Reads file
    # for line in fileinput.input(resto):
    #     texto += line

    d1 = topN("data/Comments.xml", 10, "Score", "comments")
    r1 = writeDictionary(d1, "comments", "comment", 0, False)
    
    #d2 = topN("data/Posts.xml", 10, "Score", "posts")
    #r2 = writeDictionary(d2, "posts", "post")
    
    #d3 = topN("data/Users.xml", 10, "Reputation", "users")
    #r3 = writeDictionary(d3, "users", "user")
    
    #d4 = topN("data/Tags.xml", 10, "Count", "tags")
    #r4 = writeDictionary(d4, "tags", "tag")

main()



